Improved 3-dimensional DV-hop localization algorithm based
on information of nearby nodes
Abhinesh Kaushik1 • D. K. Lobiyal1 • Shrawan Kumar2
Accepted: 24 December 2020
 The Author(s), under exclusive licence to Springer Science+Business Media, LLC part of Springer Nature 2021
Abstract
DV-Hop, a range-free localization algorithm, has been one of the most popular localization algorithm. It is easy and
inexpensive to implement. Therefore, in the literature, many improved variants of this algorithm exist. However, poor
location accuracy and higher power consumption by DV-Hop algorithm always open new avenues for research on this
algorithm and makes it a favorite among the researchers. In this paper, we have proposed an Improved 3-Dimensional DVHop algorithm based on the information of nearby nodes (I3D-DVLAIN). In the algorithm, by calculating hopsize at the
unknown nodes, we eliminate one communication among the nodes, which reduces power consumption in the network.
The hopsize calculation and location estimation is done by using only the nearby anchor nodes, which minimizes the
network usage and decreases the computational effort. For the selection of nearby anchor nodes, we introduce a new
method. Further, for localization, a novel method is used for solving the system of distance equations that restricts
propagation of inherent error in the distance and increases localization accuracy. Furthermore, by mathematically analyzing the propagation of error in solving the system of equations, we prove the superiority of I3D-DVLAIN over other
compared algorithms. The results obtained through simulation and complexity analysis of the computation and communication further strengthens our observations about the superiority of the proposed algorithm.
Keywords Wireless sensor networks (WSN)  Localization  DV-Hop  Nearby anchor nodes  Error propagation
1 Introduction
Wireless sensor networks (WSNs) consist of an extensively
dispersed network of tiny and lightweight wireless sensor
nodes set up in large numbers to observe the environment
or for measuring physical phenomena like pressure, temperature, relative humidity, movement of a body, etc. [1].
These sensor nodes are low cost in hardware terms, small
in size, multi-functional, and powerful in sensing capability
that communicates over short distance [1, 2]. These nodes
are able to form a multi-hop, distributed, and self-organizing wireless communication network [3].
Today we have a wide variety of different applications
of WSNs such as disaster management and detection, postdisaster search and rescue operations, target tracking,
remote control of challenging terrains, environment forecast and inspection, inventory management, precision
agriculture, etc. [1, 4]. Among these, most of the applications require the location coordinates of the place where the
event took place. Because without knowing the location of
a place, data related to the place will not be useable.
Therefore, location estimation or localization becomes a
fundamental requirement for various applications of
WSNs.
Though, the simplest method, based on Global Positioning System (GPS), can be used to find the location of
sensor nodes. But, in the GPS based approach, sensor
nodes are equipped with hardware chips supporting GPS
[5–7]. Besides it, the use of GPS has its shortcomings; it
makes sensor nodes bulky and costly, and the sensor node
also consumes a greater amount of energy in an energy
scarce hardware. The usage of GPS in the sensor nodes also
& Shrawan Kumar
shrawankatiyar@gmail.com
1 School of Computer and System Sciences, Jawaharlal Nehru
University, New Delhi 110067, India
2 Department of Computer Science, Indira Gandhi National
Tribal University, Regional Campus Manipur, Imphal,
Manipur 795136, India
123
Wireless Networks
https://doi.org/10.1007/s11276-020-02533-7(0123456789().,-volV)(0123456789(). ,- volV)
restricts their capability for the indoor or underground
environment, as its best application is in an open environment where it can easily communicate with the satellites [7]. To overcome these problems, many localization
algorithms have been designed. But to design a localization
algorithm with limitations like minimal hardware requirement, and minimal communication cost and computational
cost is a challenging task. Therefore, in the literature, under
these limitations, several localization algorithms for WSNs
have been proposed by researchers. These localization
algorithms are based on various factors like computation
model, GPS, range estimation, and scalability [8–10].
These algorithms can be broadly classified into two categories: range-based and range-free [5].
The Range-based localization schemes need fixed point
to point distance estimation among the neighboring nodes
for localization [11, 12]. For distance estimation, the following techniques are used: Time of Flight (TOF), Time of
Arrival (TOA) [11], received signal strength indicator
(RSSI) [13], etc. Though range-based schemes provide
good location accuracy, however, they require added
hardware for distance estimation between the nodes and
thus make them more expensive. Therefore, these algorithms are not feasible for large scale WSNs [14]. Besides
it, range-based algorithms also face problems for information like Angle of Arrival (AoA) [15], noise, and multipath fading [16].
On the other hand, Range-free localization schemes
require only connectivity and proximity information like
hop count [17, 18]. In this case, it does not require any
specific hardware. Therefore, these schemes can overcome
the limitations of the range-based schemes and make
WSNs less expensive. Though range-free schemes are
comparatively more economical but they have poor localization accuracy [10]. Therefore, there is a large scope to
improve localization accuracy of range-free schemes.
Some basic range-free localization algorithms are Centroid
[19, 20], Distance Vector Hop (DV-Hop) [21], Approximate Point in Triangulation (APIT) [22], Amorphous [23],
etc.
Among these algorithms, DV-Hop is one of the most
flexible and viable range-free localization algorithms. In
this algorithm, the location of unknown nodes can be
estimated using anchor nodes (nodes whose position is
known through GPS) in the network. However, it suffers
from poor location accuracy, like other range-free schemes
[24]. Therefore, from time to time, researchers have proposed different improved variants of the DV-Hop localization algorithm for improving its accuracy. Though its
different proposed variants [3, 25–29] improve its localization accuracy, but they also have drawbacks in terms of
high-power consumption, more communications overheads
in the network, and high computation requirements.
Therefore, in view of these drawbacks, there is a need to
improve localization accuracy of DV-Hop algorithm.
Therefore, in this paper, we propose an Improved 3-Dimensional DV-Hop localization algorithm based on the
information of nearby nodes (I3D-DVLAIN). The proposed algorithm improves localization accuracy of DVHop algorithm for 3D (three-dimensional) network by
minimal utilization of network along with reduced communication overheads and decreased computational effort.
The main contribution of the proposed algorithm is as
follows:
• It eliminates one complete communication between the
nodes in the network that reduces power consumption.
• For localization, only nearby anchor nodes are used. It
reduces computational efforts and improves localization
accuracy.
• A new method has been adopted in solving the system
of equations that reduces the propagation of error and
enhances the localization accuracy.
• The superiority of the proposed algorithm over DV-Hop
[21], OIDV-Hop (On Improved DV-Hop) [30], and
PERLA (Power efficient range-free localization algorithm) [31] is proved by making the mathematical
analysis of propagation of error in solving the system of
equations.
The rest of the paper is arranged in the following manner:
Sect. 2 explains about related work. Section 3 elaborates
the proposed algorithm. Mathematical analysis of propagation of error in DV-Hop, OIDV-Hop, PERLA, and proposed algorithm has been explained in Sect. 4. Section 5
presents the simulation work and results. Last Sect. 6
concludes the work presented in the paper.
2 Related work
At present, due to the advancement of technology and
requirement of various applications of WSNs, there is a
great constraint of localization accuracy. In last two decades, a vast range of 2-Dimensional range free localization
algorithms and their improvements [20–22, 28, 32–36] has
been proposed by researchers to achieve different goals.
The research for 2-Dimensional range free localization
reached a full grown stage. While due to the need of current applications, 3-Dimensional range free localization is
in its early phase, and a lot of algorithms [37–42] for
3-Dimensional localization also has been proposed in the
literature. But among all these algorithms, DV-Hop algorithm gets the attention of researchers due to its simplicity,
scalability, easy implementation, and less hardware
requirement. Therefore, in this paper, we proposed an
Improved 3-Dimensional DV-Hop localization algorithm
Wireless Networks
123
based on the information of nearby nodes (I3D-DVLAIN).
Hence in this section, we first describe DV-Hop and its
error analysis and further about its improvements because
this is most relevant to our proposed work.
2.1 DV-Hop algorithm [21]
The DV-Hop algorithm is divided into the following three
steps:
Step 1 Initially, every anchor node in the network
broadcasts a beacon packet having its coordinates
ðxi; yiÞ; and hop count is initialized to 1. This hop count
is incremented by one every time when a beacon packet
passes through a node in the path. On reception of the
beacon packet, every node maintains a table xi; yi ð Þ ; hopi
for every anchor node of the network, where hopi is the
least hop count between the anchor and target node. By
this procedure, all the nodes in the network become
familiar about least number of hop count to all the
anchor nodes and their coordinates.
Step 2 In this step, using coordinates of anchor nodes and
hop count, every anchor node calculates its hopsize by
using Eq. (1) as follows:
hopsizei ¼
P
i6¼j
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
xi  xj
 2
þ yi  yj
 2 q
P
i6¼j hopij
ð1Þ
where xi ð Þ ; yi and xj; yj
  are the coordinates of ith and jth
anchor nodes, respectively, and hopij is the hop count
between the ith and jth anchor nodes. The calculated
hopsize by Eq. (1) is broadcast in a controlled manner in
the network. By this procedure, all nodes in the network
receive the hopsize information from the closest anchor
nodes. This hopsize information is further used by the
unknown node u to calculate its distance from anchor
node j using Eq. (2).
dju ¼ hopsizei  hopsju ð2Þ
where hopsju is the hop count between the anchor node j
and unknown node u and hopsizei is the hopsize obtained
from the nearest anchor node i.
Step 3 Under this step, an unknown node is localized. To
calculate the location of an unknown node, it first finds
the distance from all the anchor nodes. Let ð Þ x; y be
coordinates of the unknown node and ð Þ x1; y1 , ð Þ x2; y2 …
ð Þ xn; yn are the coordinates of the anchor nodes. So, a
system of distance equations between the anchor nodes
and the unknown node is given by Eq. (3).
ð Þ x  x1
2
þð Þ y  y1
2
¼ d2
1
ð Þ x  x2
2
þð Þ y  y2
2
¼ d2
2
.
.
.
ð Þ x  xn 2
þð Þ y  yn 2
¼ d2
n
9
>>>=
>>>;
ð3Þ
Equation (3) can be written in linear form by subtracting
the last distance equation from previous ð Þ n  1 equations
and then its matrix form is given by Eq. (4)
AX ¼ B ð4Þ
where
A ¼
2ð Þ x1  xn 2ð Þ y1  yn
2ð Þ x2  xn 2ð Þ y2  yn
.
.
. .
.
.
2ð Þ xn1  xn 2ð Þ yn1  yn
2
6
6
6
4
3
7
7
7
5;
B ¼
x2
1 þ y2
1  x2
n  y2
n þ d2
n  d2
1
x2
2 þ y2
2  x2
n  y2
n þ d2
n  d2
2
.
.
.
x2
n1 þ y2
n1  x2
n  y2
n þ d2
n  d2
n1
2
6
6
6
4
3
7
7
7
5;
X ¼ x
y
 
Solving Eq. (4) by least square method, the position of
the unknown node can be obtained by Eq. (5)
Z ¼ ATA  1
ATB ð5Þ
2.2 Error analysis of DV-Hop algorithm
The unknown nodes in the DV-Hop algorithm estimate
their location with the help of hopsize and hop count
information of the anchor nodes. Therefore, there is an
error in the obtained location of the unknown node, due to
the following reasons,
1. Error in the hopsize
In DV-Hop algorithm, all the nodes within the communication range of a sensor node i will be considered at one
hop, even if they are too close or too far from the node i
regardless of their actual distance from node i: As per DVHop, in Fig. 1, the hop count between A and U is 1, and
between U and D is also 1. However, there is a difference
in the actual distances between U and A, and U and D.
2. Error in the assumption of the path between the nodes
The DV-Hop algorithm works on the assumption that the
path between nodes is a straight line, whereas, in a real
case, it is a zig-zag path. In Fig. 1, it is visible that the path
Wireless Networks
123
between the unknown node U and anchor node C is a zigzag path.
In calculation of the distance between the unknown node
and anchor node, the hopsize with inherent error is used.
Therefore, this calculated distance differs from the actual
distance between the nodes. This difference in distance
(calculated and actual) is known as the ranging error.
Further, this error propagates through the method used
to solve the system of equations for estimating the location
of the unknown nodes. This error propagation becomes a
cause of high localization error.
Example: In Fig. 1. A, B, C, and D are anchor nodes.
Let U indicate an unknown node that needs to be localized
in the 3-Dimensional scenario. The distance between the
anchor nodes A and B is 40, A and D is 30, A and C is 50,
C and D is 50, B and D is 10, and B and C is 60. The hop
count between U and A is 1, U and B is 2, U and C is 3, and
U and D is 1. Let us suppose for the worst case, the actual
distance between the unknown node U and A is 5, and U
and D is 20, and the hop size for the rest of each hop is 10.
In DV-Hop algorithm, anchor nodes A, B, C, and D calculate its hopsize as follows:
A: (40 ? 50 ? 30)/(3 ? 4?2) = 13.33
B: (40 ? 60 ? 10)/(3 ? 5?3) = 10
C: (60 ? 50 ? 50)/(5 ? 4?4) = 12.30
D: (10 ? 30 ? 50)/(2 ? 3?4) = 10
All the anchor nodes A, B, C, and D will broadcast their
hop size 13.33, 10, 12.30, and 10, respectively. The
unknown node U receives the first message from A or D. It
then calculates the distance between anchor node A and
itself, which is 13.33, distance between U and B is 26.66,
distance between U and C is 53.32, and distance between U
and D is 13.33. The actual distance between unknown node
U and anchor node A is 5, whereas the calculated distance
between them is 13.33. Anchor node A has a ranging error
of 13.33 - 5 = 8.33, which is 66% of the actual distance.
Hence the estimated location of the unknown node is not
exact because of the ranging error.
The above analysis elaborates on how the ranging error
affects the localization accuracy of the DV-Hop algorithm.
2.3 Existing improved DV-Hop localization
algorithms
Though the researchers have proposed a great range of
enhancement of DV-Hop algorithms, however explaining
and analyzing all of them is not possible here due to limitation of the space. Therefore, in this section, we elaborate
and analyze some improved algorithms.
In [41] Kaur et al. propose improvement in DV-Hop
algorithm by rectifying the average hop-size using Greywolf optimization. This rectified average hop-size is
resulted due to which the distance-error is minimized.
Again, this rectified average hop-size is improved by a
weighted Grey-wolf optimization, and localization accuracy is improved. Consequently, the proposed method is
able to reduce the localization error, but at the same time, it
contributes a great computational cost to the network due
to optimization iterations.
Sharma and Kumar [43] improve DV-Hop localization
accuracy by—finding optimum hop-size using the Line
Search algorithm and optimizing the distance-error using
Genetic algorithm with the help of selected anchor nodes
only. Since the suggested model is a 3D localization
algorithm, therefore the concept of coplanarity helps to find
the selected anchor-nodes for localizing unknown nodes.
These selected anchor-nodes participate in localizing the
unknown nodes. The suggested modifications certainly
improve the localization accuracy but at the cost of high
computational cost of the optimization algorithms.
In [34] Messous et al. propose an improved recursive
DV-Hop algorithm (IR-DV-Hop). A relationship between
hop-counts and distance-values is established with the help
of a pair of polynomial coefficients. This relationship is
improved by introducing an error correction factor. Further, using improved distance values, least square method
is performed for localization. The least square method is
carried out recursively by taking few anchor nodes randomly per iteration only. The random choice of anchor
nodes per iteration may lead to uncertain behavior of the
proposed method, and iterative execution of the least
square method contributes multiple times complexity.
Kanwar and Kumar [44] improve the localization
accuracy by defining an optimization objective using
Genetic algorithm. The objective is to minimize the distance error for the unknown nodes between the hop based
estimation and the distance equation drawn through the
anchor nodes. Although the suggested improvement is able
D
U
C
A
B
40 50
60
10
10
10
10
5
10
U1
U2
U3
10
50
30
20
Fig. 1 Representing unknown and anchor nodes
Wireless Networks
123
to keep the communication cost unaffected, but the computation cost rises because of the implementation of the
genetic algorithm to achieve optimization objective.
In [45] Yanfei et al. suggested the modification of the
hop-count method for the DV-Hop algorithm. The proposed hop-count calculation depends upon a variable
communication range instead of a constant value. Further,
the hop size for each anchor node is improved by defining
distance error per unit communication-range. Thus the
improved hop-size and hop-counts deliver better localization than DV-Hop algorithm. The proposed method
revolves around the communication-range selection algorithms. As a result, the sensor nodes must be equipped with
dynamic radio frequency transceiver hardware modules.
In [46] Goyat et al. improve localization accuracy of
DV-Hop with the help of defining a hop-size correction
factor. The correction factor is applicable for all the
anchor-nodes, as an average factor. This average correction
factor is added with the average hop-size value of each
anchor-node. The proposed method provides better location accuracy than DV-Hop algorithm. Here, the suggested
common correction factor is not an optimum value through
which all the anchor-nodes may correct their hop-size
values.
In this paper, we make comparison of our proposed
work with OIDV-Hop, and PERLA analytically and
experimentally, therefore we explain them in brief in the
following sub sections.
2.3.1 On improved DV-Hop localization algorithm (OIDVHop) [30]
This improved variant of DV-Hop algorithm tried to
enhance the localization accuracy of DV-Hop by making
two modifications. First, refined hopsize used for distance
calculation in step 2. Further, nearest anchor nodes are used
for localization in step 3.
In step 2, using hopsize (calculated similar to the DVhop algorithm), each anchor node estimate its distance dest
ij
to other anchor nodes by Eq. (6).
dest
ij ¼ hopsizei  hopsij ð6Þ
where hopsij is the hop count between anchor nodes i and j,
and hopsizei is the hop size of the ith anchor node. However, the true distance between anchor node i xi ð Þ ; yi and
j xj; yj
  are calculated by using Eq. (7)
dact
ij ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
xi  xj
 2
þ yi  yj
 2
q
ð7Þ
The difference in distances derror
ij between the estimated
and the true is given by Eq. (8)
derror
ij ¼ dest
ij  dact
ij ð8Þ
Using derror
ij ; a correction factor Wi =
P
i6¼j
derror
P ij
i6¼j
hopsij
is
calculated.
Now, using the correction factor Wi, the hopsize of
anchor node i is refined by Eq. (9)
hopsizecorr
i ¼ hopsizei  Wi ð9Þ
Further, this refined hopsize is broadcast in the network,
and using it an unknown node p calculates its distance deff
pj
from the anchor j using Eq. (10)
deff
pj ¼ hopsizecorr
i  hpj ð10Þ
Furthermore, with the help of nearest anchor nodes
selected by using Poisson distribution, the location of
unknown node is calculated using hyperbolic location
algorithm for solving the system of equations as given in
step 3.
This algorithm provides better location accuracy as
compared to the DV-Hop algorithm. But in refining the
hopsize, each anchor node is engaged in extra computations. Besides it, in broadcasting of the refined hopsize,
each anchor node makes one extra communication in the
network. This additional communication overhead increases power consumption with respect to the DV-Hop
algorithm.
2.3.2 Power efficient range free localization algorithm
(PERLA) [31]
This algorithm decreases the localization error by using
refined hopsize and by adopting a new method in solving
the system of equations. It also reduces power consumption
by eliminating one communication in the network. In step
2, using limited information; unknown nodes calculate
hopsize of ith anchor node by using Eq. (11)
hopsizei ¼
P
i6¼j dij=hopsij  
n ð11Þ
where hopsij is the hop count between the anchor nodes i
and j, dij is the distance between anchor nodes i and j, and n
is the total number of anchor nodes.
The estimated distance dest
ij between the ith and jth
anchor node is given by Eq. (12)
dest
ij ¼ hopsizei  hopsij ð12Þ
The actual distance dact
ij between the ith xi ð Þ ; yi and
jth xj; yj
  anchor node is computed by using Eq. (13)
dact
ij ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
xi  xj
 2
þ yi  yj
 2
q
ð13Þ
Therefore, the per hop error is
e
ph
ij ¼ dest
ij  dact
ij  =hopsij
Wireless Networks
123
By using per hop error, hopsize of an anchor node is
refined by using Eq. (14)
hopsizeref
i ¼ hopsizei  e
ph
ij ð14Þ
Now, the average of refined hopsize is given by Eq. (15)
hopsizeavg ¼ Xn
i¼1
hopsizeref
i =n
 ! ð15Þ
The distance di, of unknown node from ith anchor node
is given by Eq. (16),
di ¼ hopsizeavg  hopsi ð16Þ
where hopsi is the least number of hops between unknown
node and the ith anchor node.
In step 3, unknown nodes are localized by solving the
system of distance equations using the newly adopted
method. In this method, we divide the smallest distance
equation by the remaining distance equations one at a time
to reduce the propagation of inherent error in estimated
distance. This is further solved by the method of least
square. Finally, the location of the unknown node is
upgraded using extraneous information.
In the last, by calculating communication cost and
computation cost, and by proving author shows that
PERLA has lesser communication cost and computation
cost than other compared algorithms.
Although the algorithm is power efficient, but there is
some scope for reducing the localization error and
improving network utilization with efficiency.
3 Improved 3-dimensional DV-Hop
localization algorithm based
on information of nearby nodes:
a proposed algorithm
In this paper, we have proposed an Improved 3-Dimensional DV-Hop localization algorithm based on the information of nearby nodes (I3D-DVLAIN) for localization.
This proposed algorithm broadly consists of three steps:
Step 1 of the proposed algorithm is similar to step 1 of
the DV-Hop algorithm. In step 2 of the proposed algorithm
(I3D-DVLAIN), anchor nodes communicate to unknown
nodes only once, to broadcast their coordinates and hop
count. It reduces the power consumption of the nodes in the
network. While in the DV-Hop, anchor nodes communicate
twice, but in OIDV-Hop anchor nodes communicate thrice
to the unknown nodes for localization. In I3D-DVLAIN,
hopsize is calculated at the unknown node, by using the
available information (coordinates of anchor nodes and hop
count). In calculation of hopsize, only the nearby anchor
nodes are used that minimizes the network usage and
reduces the computational effort. The nearby anchor nodes
are selected using method suggested in our proposed
algorithm. In the proposed method, an unknown node
chooses at least four anchor nodes around itself by varying
the hop count optimally. An unknown node calculates
distances to its only nearby anchor nodes for localization.
In step 3, we adopt a new method of solving the system of
equations, which reduces the propagation of error. To solve
this system of distance equations for location estimation,
we first subtract the last distance equation from all other
distance equations, then divide the system of equations by
the largest distance equation. Furthermore, by mathematically analyzing the propagation of error in solving the
system of equations, we prove that propagation of error in
the proposed algorithm is smaller than the DV-Hop, OIDVHop, and PERLA algorithms. In the last, we also make a
comparative study of the computational and communication complexity of I3D-DVLAIN with DV-Hop, OIDVHop, and PERLA algorithms. The functioning of the proposed algorithm is explained step by step as follows:
Step 1 This step of the proposed algorithm is similar to the
first step of the DV-Hop algorithm. In this step, anchor
nodes broadcast their coordinates in the network so that all
the nodes (anchor and unknown nodes) obtain the coordinates of the anchor nodes and hop count.
Step 2 In this step, first, we select the nearby anchor nodes
around an unknown node. The nearby anchor nodes are
selected for minimal network utilization. This reduces the
computational effort. Further, an unknown node calculates
the hopsize by using the nearby anchor nodes and the
available information at the unknown node. Moreover, in
the last, unknown node calculates its distance to the nearby
anchor node by using the calculated hopsize.
1. Selection of nearby anchor nodes:
The prime criterion for selecting the nearby anchor nodes is
that there shall be at least four anchor nodes around an
unknown node. The unknown node selects an optimal hop
count such that sufficient anchor nodes are around it. If
sufficient, i.e., at least four anchor nodes are not available,
the hop count is increased by one, and so on. In a normal or
dense network where sensor nodes are closely placed, a
hop count of one or two may be sufficient (with 4 or more
anchor nodes around the unknown node). In sparse networks, sensor nodes are placed very far apart. Therefore,
for sufficient anchor nodes, it requires a larger hop count,
and its value can vary to three, four, or even higher.
Therefore, the number of the nearby anchor nodes varies
according to the type of network. For selecting the nearby
anchor nodes around an unknown node, we propose the
algorithm.
Wireless Networks
123
For more clarification, the flow chart for the algorithm:
Selecting nearby anchor nodes around an unknown node is
shown in Fig. 2.
The flow diagram in Fig. 2 shows a diagrammatic flow
of the working of the proposed algorithm. Initially, the
minimum hop count value assumed is one, in order to
check for the four nearby anchor nodes. The hop count is
increased gradually by one hop in case of a failure to find a
requisite number of anchor nodes. The algorithm runs for
an optimal value of hop count, considering the simulation
area and various other parameters. Therefore, in case of not
getting at least four nearby anchor nodes, for a hop count
sufficient to traverse the entire network, the algorithm exits
and fails to return an adequate number of nearby anchor
nodes.
2. Calculation of hopsize using nearby anchor nodes
Here first, an unknown node calculates the hop count
between anchor pair. Then using this hop count, the
unknown node calculates its hopsize. Further, the
Unknown node calculates the hop count between nearby
anchor pairs by using the available information of the
anchor nodes i.e. coordinates and hop count.
hopsij ¼ dij
R
	 
 ð17Þ
where d e is the ceiling function, R is the communication
radius of a node, dij is the distance between the ith and jth
anchor nodes, and hopsij is the hop count between ith and
jth anchor nodes.
After calculating the hop count between the anchor pairs
using Eq. (17), the unknown node finds hopsize as follows
by using Eq. (18):
hopsizei ¼
P
i6¼j dij  
P
i6¼j hopsij   ð18Þ
3. Distance calculation between the unknown node and
nearby anchor nodes
Here an unknown node uses only nearby anchor nodes to
calculate the distance in order to decrease the computational efforts. By using hop count and hopsize from
Eqs. (17) and (18), respectively the unknown node u calculates the distance dui from nearby ith anchor node by
using Eq. (19)
dui ¼ hopsizei  hopsui ð19Þ
where hopsizei is the hopsize for ith anchor node, and
hopsui is the hop count between unknown node u and ith
anchor node.
Step 3 To reduce the propagation of error, we adopt a
new method of solving the system of equations for
localization. In this new method, we first subtract the last
Fig. 2 Flow chart for selecting nearby anchor nodes around an distance equation from all the distance equations and
unknown node
Wireless Networks
123
then divide the system of equations by the largest
distance equation. To estimate the location of an
unknown node, we assume the coordinates of unknown
node u as ð Þ x; y;z , location of nth anchor node as
ð Þ xn; yn;zn , and dn be the distance between anchor node n
and unknown node u, calculated by using the Eq. (19).
The square of distance equations of unknown node u
from the nearby anchor nodes is shown by Eq. (20):
ð Þ x  x1
2
þð Þ y  y1
2
þð Þ z  z1
2
¼ d2
1
ð Þ x  x2
2
þð Þ y  y2
2
þð Þ z  z2
2
¼ d2
2
.
.
.
ð Þ x  xm 2
þð Þ y  ym 2
þð Þ z  zm 2
¼ d2
m
.
.
.
ð Þ x  xn 2
þð Þ y  yn 2
þð Þ z  zn 2
¼ d2
n
9
>>>>>>>>>=
>>>>>>>>>;
ð20Þ
Let mth anchor node is at the largest distance dm from
the unknown node u
Now, first subtract the last distance equation of the
Eq. (20) from all the distance equations then divide each
resultant equation by the largest distance equation of the
system of equation of Eq. (20), and we get Eq. (21) as a set
of ð Þ n  1 equations.
ð Þ x  x1 2
þð Þ y  y1 2
þð Þ z  z1 2
 ð Þ x  xn 2
þð Þ y  yn 2
þð Þ z  zn 2  
ð Þ x  xm 2
þð Þ y  ym 2
þð Þ z  zm 2 ¼ d2
1  d2
n
d2
m
ð Þ x  x2 2
þð Þ y  y2 2
þð Þ z  z2 2
 ð Þ x  xn 2
þð Þ y  yn 2
þð Þ z  zn 2  
ð Þ x  xm 2
þð Þ y  ym 2
þð Þ z  zm 2 ¼ d2
2  d2
n
d2
m
.
.
.
ð Þ x  xn1 2
þð Þ y  yn1 2
þð Þ z  zn1 2
ðð Þ x  xn 2
þð Þ y  yn 2
þð Þ z  zn 2
Þ
ð Þ x  xm 2
þð Þ y  ym 2
þð Þ z  zm 2 ¼ d2
n1  d2
n
d2
m
9
>>>>>>>>>>>>>=
>>>>>>>>>>>>>;
ð21Þ
On simplifying Eq. (21) we get Eq. (22)
 2 x1  xn  xmd1;m
 x  2 y1  yn  ymd1;m
 y  2 z1  zn  zmd1;m
 z  sd1;m
¼ d1;m x2
m þ y2
m þ z
2
m
   x2
1 þ y2
1 þ z
2
1
  þ x2
n þ y2
n þ z
2
n
 
 2 x2  xn  xmd2;m
 x  2 y2  yn  ymd2;m
 y  2 z2  zn  zmd2;m
 z  sd2;m
¼ d2;m x2
m þ y2
m þ z
2
m
   x2
2 þ y2
2 þ z
2
2
  þ x2
n þ y2
n þ z
2
n
 
ð22Þ
 2 xn1  xn  xmdn1;m
 x  2 yn1  yn  ymdn1;m
 y
 2 zn1  zn  zmdn1;m
 z  sdn1;m
¼ dn1;m x2
m þ y2
m þ z
2
m
   x2
n1 þ y2
n1 þ z
2
n1
 
þ x2
n þ y2
n þ z
2
n
 
where di;m ¼ d2
i d2
n
d2
m
; 8i ¼ 1; 2; ...n  1, and
s ¼ x2 þ y2 þ z2
Matrix form of the system of ð Þ n  1 equations shown in
Eq. (22) is as follows:
AX ¼ B ð23Þ
where A, X, and B are defined as:
A ¼
2 x1  xn  xmd1;m
  2 y1  yn  ymd1;m
  2 z1  zn  zkd1;m
  d1;m
2 x2  xn  xmd2;m
  2 y2  yn  ymd2;m
  2 z2  zn  zmd2;m
  d2;m
.
.
. .
.
. .
.
. .
.
.
2 xn1  xn  xmdn1;m
  2 yn1  yn  ymdn1;m
  2 zn1  zn  zkdn1;m
  dn1;m
2
6
6
6
4
3
7
7
7
5
B ¼
d1;m x2
m þ y2
m þ z2
m
   x2
1 þ y2
1 þ z2
1
  þ x2
n þ y2
n þ z2
n
 
d2;m x2
m þ y2
m þ z2
m
   x2
2 þ y2
2 þ z2
2
  þ x2
n þ y2
n þ z2
n
 
.
.
.
dn1;m x2
m þ y2
m þ z2
m
   x2
n1 þ y2
n1 þ z2
n1
  þ x2
n þ y2
n þ z2
n
 
2
6
6
6
4
3
7
7
7
5
X ¼
x
y
z
s
2
6
6
4
3
7
7
5
Solving Eq. (23) by least square method, the location of
the unknown node can be obtained by Eq. (24).
Z ¼ ATA  1
ATB ð24Þ
where AT is the transpose of A.
4 Mathematical analysis of propagation
of error in solving the system of equations
As we know that, estimated distance between an anchor
and unknown node has an inherent error due to error in
hopsize estimation and assuming paths between nodes as a
straight line. Further, when we solve the system of equations for localization, the inherent error propagates speedily
and localization error increases rapidly. Therefore, in the
proposed algorithm I3D-DVLAIN, we adopt a new method
for solving the system of equation to reduce propagation of
error. Here, in mathematical analysis, by comparing the
propagation of error of I3D-DVLAIN with DV-Hop,
OIDV-Hop, and PERLA algorithms we prove that the
propagation of error in I3D-DVLAIN is smaller than DVHop, OIDV-Hop, and PERLA.
Let V1 ¼ v1  Dv1 and V2 ¼ v2  Dv2 are two values.
Where v1; v2 are the actual values, and Dv1, Dv2 are the
error terms.
Further let square of V1 is represented by V i.e. V ¼ V2
1 .
Then by [47] propagation of error in V is as follows:
V ¼ 2v1  Dv1 ð25Þ
Let subtraction of V2 from V1 is represented by S i.e.
S ¼ V1  V2
Then by [47] propagation of error in S is as follows:
DS ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ Dv1
2
þð Þ Dv2
2
q
ð26Þ
Now let, division of V1 by V2 is denoted by T i.e.
T ¼ V1=V2
Then by [47] propagation of error in T is:
Wireless Networks
123
DT ¼ v1=v2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
Dv1=v1
 2
þ Dv2=v2
 2
r
ð27Þ
Let system of distance equation of unknown node to the
anchor nodes is given as: ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  x1
2
þð Þ y  y1
2
þð Þ z  z1
2
q
¼ d1 ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  x2
2
þð Þ y  y2
2
þð Þ z  z2
2
q
¼ d2
.
.
. ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  xm 2
þð Þ y  ym 2
þð Þ z  zm 2
q
¼ dm
.
.
. ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  xk
2
þð Þ y  yk
2
þð Þ z  zk
2
q
¼ dk
.
.
. ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  xi
2
þð Þ y  yi
2
þð Þ z  zi
2
q
¼ di
.
.
. ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ x  xn 2
þð Þ y  yn 2
þð Þ z  zn 2
q
¼ dn
9
>>>>>>>>>>>>>>>>>>>>>>>>=
>>>>>>>>>>>>>>>>>>>>>>>>;
ð28Þ
Let dm is the largest distance, dk is the smallest distance,
and di is the general distance equation. These distances d1,
d2, dm, dk, di, dn are erroneous because of the error in
estimating hopsize and considering straight line path. Let
error in these distances d1, d2, dm, dk, di, dn are e1, e2, em,
ek, ei, en respectively, thus, we write distances d1, d2, dm,
dk, di, dn as:
d1 ¼ ^d1 þ e1
d2 ¼ d^
2 þ e2
.
.
.
dm ¼ ^dm þ em
.
.
.
dk ¼ ^dk þ ek
.
.
.
di ¼ d^
i þ ei
.
.
.
dn ¼ d^
n þ en
9
>>>>>>>>>>>>>>>>>>=
>>>>>>>>>>>>>>>>>>;
ð29Þ
where d^
1, d^
2, d^
m, d^
k, d^
i, d^
n are actual distances.
4.1 Comparison of I3D-DVLAIN with DV-Hop
In the DV-Hop algorithm, to solve the system of equations
of Eq. (28) for localization, first, we square both sides of
the distance equation. Then all the equations are subtracted
from the last distance equation to make them linear.
Therefore, when we square distance equation in
Eq. (28), the propagation of error in d2
m, d2
i , and d2
n of
Eq. (29) according to Eq. (25) is DEm, DEi, and DEn
respectively.
DEm ¼ 2d^
mem
DEi ¼ 2d^
iei
DEn ¼ 2 ^dnen
ð30Þ
Actual values of distance are ðd^
mÞ
2
, ðd^
iÞ
2 and ðd^
nÞ
2
respectively.
After squaring all equations of Eq. (28), when last
equation (having distance d2
n) is subtracted from ith equation (having distance d2
i ), the propagation of error
according to Eq. (26) is as follows:
DD ¼ 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð ^dieiÞ
2 þ ð ^dnenÞ
2
q
; 8i ¼ 1; 2; ...n  1 ð31Þ
The actual value of the distance is ðd^
iÞ
2  ðd^
nÞ
2
:
Therefore, the propagation of error in DV-Hop is represented by DD, as shown in Eq. (31).
In our proposed algorithm I3D-DVLAIN, each equation
is subtracted from the last equation after making square of
each equation. Then the subtraction of squares of the
equation is divided by the largest distance equation, as
shown in Eq. (21).
Therefore, on dividing the ith equation which is
obtained after subtraction, by the largest distance equation
(having distance d2
m), the propagation of error according to
Eq. (27) is as follows,
DD0 ¼
^di
 2
 ^dn
 2  
d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
DD
d^
i
 2
 d^
n
 2
 !2
þ
2d^
mem
d^
m
 2
 !2 vuut ;
8i ¼ 1; 2; ...n  1 and i 6¼ m
DD0 ¼ 1
d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ DD 2
þ
2 ^dmem
d^
m
 2
 !2
d^
i
 2
 d^
n
 2  2
vuut
ð32Þ
Dividing both sides of Eq. (32) by DD, we get
DD0
DD ¼ 1
d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
1 þ
2d^
mem
^ ð Þ dm
2
 2
d^
i
 2
 d^
n
 2  2
ð Þ DD 2
vuuuut
Substituting the value of DD from Eq. (31) and solving
the equations, we obtained the following:
DD0
DD ¼ 1
d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
1 þ
d^
i
d^
m
 2
 d^
n
d^
m
 2  2
^diei
d^
mem
 2
þ ^dnen
d^
mem
 2
vuuuuut ð33Þ
where 0\di\dm, and 0\dn\dm; 8i ¼ 1; 2; ...n  1, and
i 6¼ m
Therefore, 0\d^
i\d^
m, and 0\d^
n\d^
m
OR 0\ d^
i
d^
m
 2
\1, and 0\ d^
n
d^
m
 2
\1
Hence,
Wireless Networks
123
0\
d^
i
d^
m
 !2
 d^
n
d^
m
 !2 0
@
1
A
2
\1 ð34Þ
The inherent error in dm, di, and dn are em, ei, and en
respectively.
The dm is the largest distance, therefore, error em in the
dm is also largest value because, with more number of hops,
propagation of error is high.
Therefore, 0\ei\em, and 0\en\em;
8i ¼ 1; 2; ...n  1, and i 6¼ m
And 0\ ^diei\ ^dmem, and 0\ ^dnen\ ^dmem
OR 0\ d^
iei
^dmem
\1, and 0\ d^
nen
^dmem
\1
OR0\ d^
iei
d^
mem
 2
\1, and 0\ d^
nen
d^
mem
 2
\1
Hence, 0\ d^
iei
d^
mem
 2
þ d^
nen
d^
mem
 2   and in the worst case, its
maximum value is 2, represented by Eq. (35)
max d^
iei
d^
mem
 !2
þ
d^
nen
d^
mem
 !2 2
4
3
5 ¼ 2 ð35Þ
The result obtained by using Eqs. (34) and (35) is
d^
i
^dm
 2
 d^
n
^dm
 2  2
d^
iei
d^
mem
 2
þ d^
nen
d^
mem
 2 \1
Therefore,
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
1 þ
^di
d^
m
 2
 ^dn
d^
m
 2  2
d^
iei
^dmem
 2
þ d^
nen
^dmem
 2
vuuuuut
\ ffiffiffi
2
p
Hence, by using Eq. (33)
DD0
DD ¼
ffiffiffi
2
p
d^
m
 2
But, ffiffiffi
2
p  d^
m
 2
OR ffiffi
2
p
d^ ð Þm
2  1,
Therefore, DD0
DD  1.
Hence, DD0  DD.
It proves that the propagation of error in I3D-DVLAIN
is less than DV-Hop.
4.2 Comparison of I3D-DVLAIN with OIDV-Hop
In OIDV-Hop Algorithm, the author only squares the distance equations and then solves it by using hyperbolic
method for localization. Therefore, on squaring ith distance
equation propagation of error would be,
DEi ¼ 2d^
iei; 8i ¼ 1; 2; ...n ð36Þ
The propagation of error in the proposed method I3DDVLAIN is given in Eq. (32).
Dividing the Eq. (32) by Eq. (36), we get
DD0
DEi
¼ 1
2d^
iei d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ð Þ DD 2
þ
2d^
mem
d^
m
 2
 !2
^di
 2
 ^dn
 2  2
vuut ;
8i ¼ 1; 2; ...n  1 and i 6¼ m
ð37Þ
Substituting the value of DD from Eq. (31) in the
Eq. (37) and then solving it we obtain the Eq. (38).
DD0
DEi
¼ em
d^
m
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
1
d^
mem
 2 þ
d^
nen
d^
mem
 !2
1
d^
iei
 2 þ
d^
i
d^
m
 !2
 d^
n
d^
m
 !2 0
@
1
A
2
vuuut
ð38Þ
But, 1
d^ ð Þ mem
2  1, and d^
nen
d^
mem
 2
1
d^ ð Þ iei
2  1, since
d^
nen
d^
mem
 2
\1, and 1
^ ð Þ diei
2  1; 8i ¼ 1; 2; ...n  1, and i 6¼ m.
Since ^dm is the largest distance, so em is larger than ei
and en
Therefore, by neglecting the terms 1
d^ ð Þ mem
2 and
d^
nen
d^
mem
 2
1
^ ð Þ diei
2 in Eq. (38), we get Eq. (39)
DD0
DEi
¼ em
^dm
d^
i
^dm
 !2
 d^
n
^dm
 !2 2
4
3
5 ð39Þ
Since d^
i
^dm
 2
 d^
n
^dm
 2  \1, and em
^dm
\1
Hence, em
^dm
d^
i
^dm
 2
 d^
n
^dm
 2  \1
Therefore, Eq. (39) is reduced as:
DD0
DEi
\1
OR
DD0
\DEi
This proves that the propagation of error in I3DDVLAIN is smaller than OIDV-Hop.
4.3 Comparison of I3D-DVLAIN with PERLA
In PERLA, first, we square the distance equation and then
divide the smallest distance equation by all other equations
one at a time. Therefore, in squaring the equations, propagation of error is given by Eq. (30). On dividing the
smallest equation (equation having distance dk) by any
other distance equation (equation of di distance), the
propagation of error would be,
Wireless Networks
123
DC ¼ d^
k
 2
d^
i
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
2d^
kek
d^
k
 2
 !2
þ
2d^
iei
d^
i
 2
 !2 vuut ð40Þ
Equation (40) can also be written as
DC ¼ 2 d^
k
 2
d^
i
 2  em
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ek
^dkem
 2
þ ei
^diem
 2
s
;
8i ¼ 1; 2; ...n  1; and i 6¼ m
ð41Þ
Here, ek
d^
k em
 1 and ei
d^
iem
 1; 8i ¼ 1; 2; ...n  1, and
i 6¼ m
Therefore Eq. (41) becomes
DC ¼ 2 ^dk
 2
d^
i
 2  em ð42Þ
The propagation of error in the proposed method is
represented by Eq. (32), on substituting the value of DD in
Eq. (32) we get
DD0 ¼ 2
d^
m
 2
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
ðd^
ieiÞ
2 þ ðd^
nenÞ
2 þ em
d^
m
 2
d^
i
 2
 d^
n
 2  2
s
DD0 ¼ 2em
d^
m
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
d^
iei
d^
mem
 !2
þ
d^
nen
d^
mem
 !2
þ
d^
i
d^
m
 !2
 d^
n
d^
m
 !2 0
@
1
A
2
vuuut
ð43Þ
Here, d^
iei
^dmem
 \1, d^
nen
^dmem
 2
\1, and
d^
i
d^
m
 2
 d^
n
d^
m
 2  2
\1; 8i ¼ 1; 2; ...n  1, and i 6¼ m
So,
max d^
iei
d^
mem
 !2
þ
d^
nen
d^
mem
 !2
þ
d^
i
d^
m
 !2
 d^
n
d^
m
 !2 0
@
1
A
2 2
4
3
5 ¼ 3
Therefore Eq. (43) can be written as
DD0 ¼ 2em
d^
m
ffiffiffi
3
p ð44Þ
Now dividing Eq. (44) by Eq. (42), we get
DD0
DC ¼
ffiffiffi
3
p d^
i
 2
d^
m d^
k
 2
DD0
DC ¼ ^di
d^
m
ffiffiffi
3
p ^di
d^
k
 2
ð45Þ
Here 0\ ^di
d^
m
 \1, and 0\
ffiffi
3
p ^di
d^ ð Þk
2 \1
So, d^
i
d^
m
  ffiffi
3
p d^
i
^ ð Þ dk
2
 \1
Therefore,
DD0
DC
\1
OR
DD0
\DC
This proves that the propagation of error in the proposed
method I3D-DVLAIN is lesser than PERLA.
5 Simulation results and performance
analysis
This section provides an insight into the efficacy of the
proposed algorithm through the analysis of localization
error, computational and communication complexity. For
the evaluation of performance, the proposed and other
algorithms have been simulated on MATLAB 2018b. The
performance of the I3D-DVLAIN is compared with DVHop algorithm, OIDV-Hop algorithm, and PERLA algorithm. All these algorithms have been designed for 2-dimensional networks. But proposed algorithm I3DDVLAIN is designed for a 3-Dimensional scenario.
Therefore, for simulation compatibility, we have extended
DV-Hop, OIDV-Hop, and PERLA into 3-Dimensions by
including a third dimension in these algorithms.
Localization Error (LE) [31] defined for simulation is
given by Eq. (46).
Localization Error ¼
PN
i¼Mþ1
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
xu
i  xa
i ð Þ2
þ yu
i  ya
i ð Þ2
þ zu
i  za
i ð Þ2
q
R  ð Þ N  M
ð46Þ
where (xu
i ; yu
i ;zu
i Þ are the estimated coordinates of the ith
unknown node and xa
i ; ya
i ;za
i
  are the actual coordinates of
the respective unknown node, N is the total number of
sensor nodes in the network, M determines the number of
anchor nodes out of the total sensor nodes, and R denotes
the communication radius of a node.
In the real environment, communication range of sensor
nodes of the network is not a standard circle due to fading,
noise etc. It is anomalistic polygon to a certain extent [3].
Therefore, in a path each hop distance is not equal. While it
is assumed that the communication range of the sensor
nodes is standard circle and a standard value (radius of
circle) is used. So, there is difference between standard
value and actual value (value obtained by anomalistic
polygon). This difference is called communication ranging
error. Therefore, in the simulation to create realistic environment we consider three scenario of communication
ranging error as 0–10%, 10–20%, and 20–30%,
respectively.
From the Eq. (46) It is obvious that the localization error
depends on the parameters like total number of nodes, the
Wireless Networks
123
percentage of anchor nodes, and communication radius of
the sensor nodes. Therefore, to analyze the behavior of
localization error following experiments are conducted.
1. Localization Error versus total number of nodes
2. Localization Error versus percentage of anchor nodes
3. Localization Error versus communication radius
These experiments are analyzed under sub Sects. 5.2, 5.3,
and 5.4, respectively.
Further the effectiveness of proposed algorithm is analyzed with the help of root mean square error (RMSE). To
represent the RMSE for variation in parameters (total
number of nodes, the percentage of anchor nodes, and
communication radius of the sensor nodes) an experiment
is also conducted in sub Sect. 5.5 under heading ‘‘RMSE
comparison of I3D-DVLAIN with different algorithms’’.
The RMSE [48] is defined by Eq. (47).
RMSE ¼
ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi
1
t
Xt
i¼1
xu
i  xa
i ð Þ2
þ yu
i  ya
i ð Þ2
þ zu
i  za
i ð Þ2 h i s
ð47Þ
where (xu
i ; yu
i ;zu
i Þ are the estimated coordinates of the ith
unknown node and xa
i ; ya
i ;za
i
  are the actual coordinates,
and t is the number of simulation times.
In simulation of each experiment, the experimental
region is considered a cubic area of fixed size
100 m 9 100 m 9 100 m in which nodes are randomly
dispersed. In all experiments, simulations are carried out by
keeping the parameters similar for every algorithm. Each
algorithm including I3D-DVLAIN is run by 1000 times for
randomly generated scenarios of nodes deployment and its
average values are considered for comparison.
Before explaining about the above said experiments, we
conduct an analysis to represent a basic view of behavior of
localization error of I3D-DVLAIN and other compared
algorithms for different number of trials.
5.1 Localization error comparison of I3D-DVLAIN
with different algorithms
In Fig. 3 the performance of I3D-DVLAIN is compared
against the DV-Hop, OIDV-Hop, and PERLA by conducting the simulation for a hundred trials, taking the total
number of nodes as 400, communication radius of sensor as
18 m, and keeping the percentage of anchor nodes to the
total number of nodes at 15%. The algorithms I3DDVLAIN, OIDV-Hop, PERLA, and DV-Hop have been
run for hundred random deployments, and results for the
percentage of localization error for all the hundred trials
have been plotted in Fig. 3. Our algorithm shows better
results as compared to the other algorithms. The peak in the
localization error for some values can be explained as some
combinations creating a worst-case scenario for the algorithm. When we look at the average value at the end of a
thousand trials, we find I3D-DVLAIN has an average LE
of around 17%, while DV-Hop has about 47%, OIDV-Hop
has about 31%, and PERLA has about 30%. This proves
that our proposed algorithm is much better than the other
three algorithms.
5.2 Localization error versus total number
of nodes
Localization Error versus total number of nodes Fig. 4(a)–
(c) shows the impact of total number of sensor nodes in the
network on the localization error for different communication ranging error of 0–10%, 10–20%, and 20–30%,
respectively. The percentage of anchor nodes has been kept
constant to 15%, with a communication radius of 18 m,
and the total number of nodes (anchor nodes and unknown
nodes) varies from 100 to 800. We observe that the LE for
I3D-DVLAIN is smaller as compared to DV-Hop, OIDVHop, and PERLA for the same value of total number of
nodes. The LE for DV-Hop, OIDV-Hop, and PERLA
decreases slowly as compared to I3D-DVLAIN. The
steepness in LE is very prominent from 100 to 400 nodes
for I3D-DVLAIN. There is an overall fall of around 20% in
LE for I3D-DVLAIN as compared to DV-Hop, OIDV-Hop,
and PERLA, where LE falls by 10–15%. The effect of
varying communication ranging error is also smaller on our
algorithm as compared to other algorithms, as seen in
Fig. 4.
5.3 Localization error versus percentage
of anchor nodes
Figure 5(a)–(c) shows comparison of localization error
among I3D-DVLAIN, DV-Hop, OIDV-Hop, and PERLA
algorithms for a varying percentage of anchor nodes to the
total number of nodes for three different communication
ranging error, i.e., 0–10%, 10–20%, and 20–30%, respectively. The total number of nodes in the network is fixed at
400, and the percentage of anchor nodes is varied from 5 to
35%. The communication radius of the sensor nodes has
been taken as 18 m. The results in Fig. 5 show that I3DDVLAIN has smaller LE as compared to other algorithms
for every value of the percentage of anchor nodes. The
localization error for all algorithms falls sharply when the
anchor nodes are increased from 5 to 20%. After that, the
fall in LE becomes less steep. There is approximately 25%
fall in the localization error for I3D-DVLAIN algorithm
with up to 35% of anchor nodes, whereas for DV-Hop,
OIDV-Hop, and PERLA, it is approximately 10–15%.
These results also confirm that our algorithm is more
immune to the communication ranging error as compared
Wireless Networks
123
0 10 20 30 40 50 60 70 80 90 100
Number of trial
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
0.5
Localisation Error
DV-Hop
OIDV-Hop
PERLA
I3D-DVLAIN
Fig. 3 Localization error versus
no. of trials
Fig. 4 Localization error versus total number of nodes for different communication ranging error
Wireless Networks
123
to DV-Hop, OIDV-Hop, and PERLA, as the increment in
LE in case of I3D-DVLAIN is small.
5.4 Localization error versus communication
radius
Figure 6(a)–(c) shows the impact of the communication
radius of sensor nodes on the Localization Error for different communication ranging error of 0–10%, 10–20%,
and 20–30%, respectively. The number of anchor nodes has
been fixed at 15% of the total number of nodes, which is
fixed at 400; the communication radius is varied from 15 to
45 m. The LE for I3D-DVLAIN is smaller as compared to
DV-Hop, OIDV-Hop, and PERLA for every value of
communication radius. The fall in LE is more prominent
from the communication radius of 15 m to 30 m as compared to that of 30 m to 45 m, where the value of LE nearly
normalizes. There is an overall decrease of around 30% in
LE for I3D-DVLAIN as compared to DV-Hop, OIDV-Hop,
and PERLA algorithms, where fall in LE is in a range of
10–15%. The effect of different communication ranging
error on the LE for varying communication radius is also
smaller on our algorithm as compared to other algorithms.
From these results, we can confirm that our proposed
algorithm outperforms other algorithms.
5.5 RMSE comparison of I3D-DVLAIN
with different algorithms
Though LE has been represented in Sects. 5.2, 5.3, 5.4, but
for more clarity about the performance of proposed algorithm we also represent RMSE. The communication
ranging error can vary within the range of 10–20% of
communication radius. The effect of variation in the total
number of sensor nodes, the effect of change in the percentage of anchor nodes, and the effect of change in
Fig. 5 Localization error versus percentage of anchor nodes for different communication ranging error
Wireless Networks
123
communication radius is studied on RMSE is shown in
Fig. 7(a)–(c). The Fig. 7(a)–(c) establish the I3D-DVLAIN
with a significant improvement of 25%, on average.
5.6 Computational complexity
Computational complexity is defined as the time required
by an algorithm for localization. The DV-Hop uses the
least square method to localize sensor nodes, so it requires
computation complexity of about O m3 ð Þ [49]; where m is
the number of anchor nodes. Similarly, OIDV-Hop [30]
computes for hop-correction, selection of anchor nodes per
unit unknown node, and two-dimensional hyperbolic
method with computational complexity contribution of
Oð Þ m , Oð Þ nm , and O m3 ð Þ respectively; where n is the
number of unknown nodes. The PERLA [31] contributes
through computational cost of Oð Þ m and O m3 ð Þ respectively by hop-correction, and least square method which is
similar to the proposed method I3D-DVLAIN. For further
illustration, in Table 1, we have shown the comparison of
time complexity of I3D-DVLAIN, DV-Hop, OIDV-Hop,
and PERLA algorithms for localization of the unknown
nodes in the network, for different value of total number of
nodes between 300 and 600. The number of anchor nodes
in the network is kept at 15% of the total nodes, and the
communication radius of a node is taken as 18 m. We
observe that the time taken by our proposed algorithm is
smaller as compared to that of DV-Hop, OIDV-Hop, and
PERLA.
5.7 Communication complexity
Communication complexity is determined by the total
number of communications made during the entire running
time of the algorithm and the overheads incurred due to
these communications. Table 2 shows the number of
packets broadcast and received by the sensor nodes at each
Fig. 6 Localization error versus communication radius for different communication ranging error
Wireless Networks
123
step of the algorithm and the total number of packets. In the
DV-Hop algorithm, the anchor nodes communicate twice,
once in step 1, to transmit the coordinates and hop count,
and second time in step 2 to transmit the estimated hopsize
[25, 31, 44]. In OIDV-Hop, nodes communicate thrice.
Twice it communicates as similar to DV-Hop, and third
time again in step 2 to broadcast the modified hop size.
This increases the communication cost of the OIDV-Hop
algorithm. The number of communications in I3DDVLAIN and PERLA [31] is restricted to only one in step
1. Therefore, I3D-DVLAIN has better communication cost
as compared to DV-Hop and OIDV-Hop, but it is same as
that of PERLA. However, In Table 2, n represents the
number of anchor nodes, N denotes the total nodes in the
network and Savg represents the average connectivity of
nodes.
Fig. 7 Root mean square error with respect to total number of nodes, percentage of anchor nodes and communication Radius
Table 1 Comparison of
localization time (in s) of all the
algorithms
Total number of nodes 3D-DV-Hop OIDV-Hop PERLA I3D-DVLAIN
300 0.12 0.09 0.13 0.09
350 0.13 0.10 0.16 0.09
400 0.16 0.12 0.19 0.10
450 0.18 0.15 0.23 0.12
500 0.19 0.16 0.27 0.12
550 0.22 0.19 0.29 0.15
600 0.27 0.22 0.33 0.18
Wireless Networks
123
6 Conclusion
In this research work, we have proposed an I3D-DVLAIN
algorithm to enhance the efficiency of the existing DV-Hop
algorithm, with reduced power consumption without any
additional hardware requirement. In I3D-DVLAIN, power
consumption is reduced by eliminating one complete
communication. This algorithm makes minimal network
utilization as calculation of hopsize and estimation of
location is done by using only nearby anchor nodes, instead
of using the entire network. Further, propagation of error is
minimized by using a new method of solving the system of
distance equations. The mathematical error analysis proves
that our proposed algorithm has significantly smaller error
propagation as compared to DV-Hop, OIDV-Hop, and
PERLA. The simulation results show that our algorithm
performs better than other algorithms in terms of localization error, which averages at around 17% for I3DDVLAIN. Finally, computational and communication
complexity also prove the superiority of our algorithm
compared to DV-Hop, OIDV-Hop, and PERLA.
In future, we will try to implement the proposed algorithm I3D-DVLAIN in irregular and sparse networks. We
will also concentrate to extend I3D-DVLAIN for mobile
wireless sensor networks under the constraints of limited
residual energy with upper and lower bounds.
References
1. Akyildiz, I. F., Su, W., Sankarasubramaniam, Y., & Cayirci, E.
(2002). Wireless sensor networks: A survey. Computer Networks,
38(4), 393–422. https://doi.org/10.1016/S1389-1286(01)00302-4.
2. Boukerche, A., Oliveira, H. A. B. F., Nakamura, E. F., & Loureiro, A. A. F. (2008). Localization systems for wireless sensor
networks. In A. Boukerche (Ed.), Algorithms and protocols for
wireless sensor networks (pp. 307–340). New York: Wiley.
https://doi.org/10.1002/9780470396360.ch11.
3. Kumar, S., & Lobiyal, D. K. (2013). An advanced DV-Hop
localization algorithm for wireless sensor networks. Wireless
Personal Communications, 71(2), 1365–1385. https://doi.org/10.
1007/s11277-012-0880-3.
4. Guo, Y., Han, Q., & Kang, X. (2019). Underwater sensor networks localization based on mobility-constrained beacon. Wireless Networks. https://doi.org/10.1007/s11276-019-02023-5.
5. Bulusu, N., Heidemann, J., & Estrin, D. (2000). GPS-less lowcost outdoor localization for very small devices. IEEE Personal
Communications, 7(5), 28–34. https://doi.org/10.1109/98.878533.
6. Cˇ apkun, S., Hamdi, M., & Hubaux, J. P. (2001). GPS-free positioning in mobile ad-hoc networks. Proceedings of the Hawaii
International Conference on System Sciences. https://doi.org/10.
1109/HICSS.2001.927202.
7. Hofmann-Wellenhof, B., & Lichtenegger, H. C. J. E. (2012).
Global positioning system: Theory and practice. Berlin: Springer.
8. Han, G., Xu, H., Duong, T. Q., Jiang, J., & Hara, T. (2013).
Localization algorithms of wireless sensor networks: A survey.
Telecommunication Systems, 52(4), 2419–2436. https://doi.org/
10.1007/s11235-011-9564-7.
9. Boukerche, A., Oliveira, H., Nakamura, E., & Loureiro, A.
(2009). DV-Loc: A scalable localization protocol using Voronoi
diagrams for wireless sensor networks. IEEE Wireless Communications, 16(2), 50–55. https://doi.org/10.1109/MWC.2009.
4907560.
10. Chowdhury, T. J. S., Elkin, C., Devabhaktuni, V., Rawat, D. B.,
& Oluoch, J. (2016). Advances on localization techniques for
wireless sensor networks: A survey. Computer Networks. https://
doi.org/10.1016/j.comnet.2016.10.006.
11. Abd El Aziz, M. (2017). Source localization using TDOA and
FDOA measurements based on modified cuckoo search algorithm. Wireless Networks, 23(2), 487–495. https://doi.org/10.
1007/s11276-015-1158-y.
12. Oliveira, L. L., Oliveira, L. A., Silva, G. W. A., Timoteo, R.
D. A., & Cunha, D. C. (2019). An RSS-based regression model
for user equipment location in cellular networks using machine
Table 2 The number of packets received and sent by all the algorithms at various steps
Algorithm Packets Step 1 Step 2 Total packets
3D-DV-Hop Broadcast N  n N N  n  1 þ Savg    Savg þ 2N  n
Received n  ð Þ N  1 Savg N  n
Total n  N þ ð Þ N  1 Savg 
  2 N  n
OIDV-Hop Broadcast N  n 2N N  n  1 þ Savg    Savg þ 4N  2n
Received n  ð Þ N  1 Savg 2ð Þ N  n
Total n  N þ ð Þ N  1 Savg 
  2 2ð Þ N  n
PERLA Broadcast N  n NIL N n þ n  Savg    n  Savg
Received n  ð Þ N  1 Savg NIL
Total n  N þ ð Þ N  1 Savg 
  NIL
I3D-DVLAIN Broadcast N  n NIL N n þ n  Savg    n  Savg
Received n  ð Þ N  1 Savg NIL
Total n  N þ ð Þ N  1 Savg 
  NIL
Wireless Networks
123
learning. Wireless Networks, 25(8), 4839–4848. https://doi.org/
10.1007/s11276-018-1774-4.
13. Jin, R., Che, Z., Xu, H., Wang, Z., & Wang, L. (2015). An RSSIbased localization algorithm for outliers suppression in wireless
sensor networks. Wireless Networks, 21(8), 2561–2569. https://
doi.org/10.1007/s11276-015-0936-x.
14. Han, S., Lee, S., Lee, S., Park, J., & Park, S. (2010). Node distribution-based localization for large-scale wireless sensor networks. Wireless Networks, 16(5), 1389–1406. https://doi.org/10.
1007/s11276-009-0210-1.
15. Boushaba, M., Hafid, A., & Benslimane, A. (2009). High accuracy localization method using AoA in sensor networks. Computer Networks, 53(18), 3076–3088. https://doi.org/10.1016/j.
comnet.2009.07.015.
16. Li, C., Zhang, H., Hao, B., & Li, J. (2011). A survey on routing
protocols for large-scale wireless sensor networks. Sensors,
11(4), 3498–3526. https://doi.org/10.3390/s110403498.
17. Cabero, J. M., Olabarrieta, I., Gil-Lo´pez, S., del Ser, J., & Martı´n,
J. L. (2014). Range-free localization algorithm based on connectivity and motion. Wireless Networks, 20(8), 2287–2305.
https://doi.org/10.1007/s11276-014-0741-y.
18. Ma, D., Er, M. J., & Wang, B. (2010). Analysis of hop-countbased source-to-destination distance estimation in wireless sensor
networks with applications in localization. IEEE Transactions on
Vehicular Technology, 59(6), 2998–3011. https://doi.org/10.
1109/TVT.2010.2048346.
19. Zhao, J., Zhao, Q., Li, Z., & Liu, Y. (2013). An improved
weighted centroid localization algorithm based on difference of
estimated distances for wireless sensor networks. Telecommunication Systems, 53(1), 25–31. https://doi.org/10.1007/s11235-
013-9673-6.
20. Xu, L., Wang, K., Jiang, Y., Yang, F., Du, Y., & Li, Q. (2011). A
study on 2D and 3D weighted centroid localization algorithm in
wireless sensor networks. In 2011 3rd international conference
on advanced computer control, ICACC 2011 (Vol. 978,
pp. 155–159). https://doi.org/10.1109/ICACC.2011.6016388.
21. Niculescu, D., & Nath, B. (2020). Ad hoc positioning system
(APS). In GLOBECOM’01. IEEE global telecommunications
conference (Cat. No.01CH37270) (Vol. 5, pp. 2926–2931). IEEE.
https://doi.org/10.1109/GLOCOM.2001.965964.
22. Cheng, W. H., Li, J., & Li, H. (2012). An improved APIT
location algorithm for wireless sensor networks. In J. Kacprzyk
(Ed.), Advances in intelligent and soft computing, AISC (Vol.
139, pp. 113–119). Berlin: Springer. https://doi.org/10.1007/978-
3-642-27951-5_17.
23. Nagpal, R., Shrobe, H., & Bachrach, J. (2003). Organizing a
global coordinate system from local information on an ad hoc
sensor network. Lecture Notes in Computer Science (including
subseries Lecture Notes in Artificial Intelligence and Lecture
Notes in Bioinformatics), 2634, 333–348. https://doi.org/10.1007/
3-540-36978-3_22.
24. Gui, L., Val, T., & Wei, A. (2011). Improving localization
accuracy using selective 3-anchor DV-hop algorithm. IEEE
Vehicular Technology Conference. https://doi.org/10.1109/
VETECF.2011.6093011.
25. Kumar, S., & Lobiyal, D. K. (2017). Novel DV-Hop localization
algorithm for wireless sensor networks. Telecommunication
Systems, 64(3), 509–524. https://doi.org/10.1007/s11235-016-
0189-8.
26. Hu, Y., & Li, X. (2013). An improvement of DV-Hop localization algorithm for wireless sensor networks. Telecommunication
Systems, 53(1), 13–18. https://doi.org/10.1007/s11235-013-9671-
8.
27. Zhao, L., Zhang, K., & Jia, Y. (2020). An improved localization
algorithm based on DV-Hop. In J. Kacprzyk (Ed.), Advances in
intelligent systems and computing, AISC (Vol. 1084,
pp. 590–595). Berlin: Springer. https://doi.org/10.1007/978-3-
030-34387-3_72.
28. Cai, X., Wang, P., Du, L., Cui, Z., Zhang, W., & Chen, J. (2019).
Multi-objective three-dimensional DV-Hop localization algorithm with NSGA-II. IEEE Sensors Journal, 19(21),
10003–10015. https://doi.org/10.1109/JSEN.2019.2927733.
29. Liu, G., Qian, Z., & Wang, X. (2019). An improved DV-Hop
localization algorithm based on hop distances correction. China
Communications, 16(6), 200–214. https://doi.org/10.23919/j.cc.
2019.06.016.
30. Shen, S., Yang, B., Qian, K., She, Y., & Wang, W. (2019). On
improved DV-hop localization algorithm for accurate node
localization in wireless sensor networks. Chinese Journal of
Electronics, 28(3), 658–666. https://doi.org/10.1049/cje.2019.03.
013.
31. Kumar, S., & Lobiyal, D. K. (2014). Power efficient range-free
localization algorithm for wireless sensor networks. Wireless
Networks, 20(4), 681–694. https://doi.org/10.1007/s11276-013-
0630-9.
32. Huang, Y., Luo, Y., Lai, H., & Huang, Y. (2019). A new localisation strategy with wireless sensor networks for tunnel space
model. International Journal of High Performance Computing
and Networking, 14(3), 249. https://doi.org/10.1504/ijhpcn.2019.
102124.
33. Hadir, A., Zine-Dine, K., Bakhouya, M., & el Kafi, J. (2019).
Novel localisation algorithms in wireless sensor networks. International Journal of Wireless and Mobile Computing, 16(1),
80–96. https://doi.org/10.1504/IJWMC.2019.097439.
34. Messous, S., Liouane, H., & Liouane, N. (2020). Improvement of
DV-Hop localization algorithm for randomly deployed wireless
sensor networks. Telecommunication Systems, 73(1), 75–86.
https://doi.org/10.1007/s11235-019-00592-6.
35. Yu, K., Hedley, M., Sharp, I., Guo, Y. J., Sabale, K., Mini, S.,
et al. (2019). Node positioning in ad hoc wireless sensor networks. Wireless Networks, 5(1), 641–646. https://doi.org/10.
1007/s11276-017-1538-6.
36. Sharp, I., & Yu, K. (2013). Enhanced least-squares positioning
algorithm for indoor positioning. IEEE Transactions on Mobile
Computing, 12(8), 1640–1650. https://doi.org/10.1109/TMC.
2012.124.
37. Chen, X., & Zhang, B. (2014). 3D DV-hop localisation
scheme based on particle swarm optimisation in wireless sensor
networks. International Journal of Sensor Networks, 16(2),
100–105. https://doi.org/10.1504/IJSNET.2014.065869.
38. Kumar, A., Khosla, A., Saini, J. S., & Sidhu, S. S. (2015). Rangefree 3D node localization in anisotropic wireless sensor networks.
Applied Soft Computing Journal, 34, 438–448. https://doi.org/10.
1016/j.asoc.2015.05.025.
39. Sharma, G., & Kumar, A. (2018). Fuzzy logic based 3D localization in wireless sensor networks using invasive weed and
bacterial foraging optimization. Telecommunication Systems,
67(2), 149–162. https://doi.org/10.1007/s11235-017-0333-0.
40. Xu, Y., Zhuang, Y., & Gu, J. J. (2015). An improved 3D localization algorithm for the wireless sensor network. International
Journal of Distributed Sensor Networks. https://doi.org/10.1155/
2015/315714.
41. Kaur, A., Kumar, P., & Gupta, G. P. (2018). Nature inspired
algorithm-based improved variants of DV-hop algorithm for
randomly deployed 2D and 3D wireless sensor networks. Wireless Personal Communications, 101(1), 567–582. https://doi.org/
10.1007/s11277-018-5704-7.
42. Gou, P., Liu, X., Sun, M., & He, B. (2020). A three-dimensional
localization algorithm with multiple communication radii and
hybrid intelligence. In Proceedings—2020 international conference on intelligent transportation, big data and smart city,
ICITBS 2020 (pp. 477–481). Institute of Electrical and
Wireless Networks
123
Electronics Engineers Inc. https://doi.org/10.1109/ICITBS49701.
2020.00103.
43. Sharma, G., & Kumar, A. (2018). Improved range-free localization for three-dimensional wireless sensor networks using genetic
algorithm. Computers & Electrical Engineering, 72, 808–827.
https://doi.org/10.1016/j.compeleceng.2017.12.036.
44. Kanwar, V., & Kumar, A. (2020). DV-Hop based localization
methods for additionally deployed nodes in wireless sensor network using genetic algorithm. Journal of Ambient Intelligence
and Humanized Computing. https://doi.org/10.1007/s12652-020-
01907-1.
45. Yanfei, J., Kexin, Z., & Liquan, Z. (2020). Improved DV-Hop
location algorithm based on mobile anchor node and modified
hop count for wireless sensor network. Journal of Electrical and
Computer Engineering, 2020, 1–9. https://doi.org/10.1155/2020/
9275603.
46. Goyat, R., Rai, M. K., Kumar, G., Kim, T. H., & Saha, R. (2019).
Energy efficient range-free localization algorithm for wireless
sensor networks. Sensors. https://doi.org/10.3390/s19163603.
47. Taylor, J. R. (1997). An introduction to error analysis. Journal of
the Acoustical Society of America, 101, 330. https://doi.org/10.
1121/1.418074.
48. Wu, P., Su, S., Zuo, Z., Guo, X., Sun, B., & Wen, X. (2019).
Time difference of arrival (TDOA) localization combining
weighted least squares and firefly algorithm. Sensors. https://doi.
org/10.3390/s19112554.
49. Zhao, W., Shao, F., Ye, S., & Zheng, W. (2018). LSRR-LA: An
anisotropy-tolerant localization algorithm based on least square
regularized regression for multi-hop wireless sensor networks.
Sensors, 18(11), 3974. https://doi.org/10.3390/s18113974.
Publisher’s Note Springer Nature remains neutral with regard to
jurisdictional claims in published maps and institutional affiliations.
Abhinesh Kaushik received his
M.Tech. in Computer Science
from School of Computer and
System Sciences, Jawaharlal
Nehru University, New Delhi,
India in 2016. He also received
B.Tech. in Computer Science
and Engineering from Guru
Gobind Singh Indraprastha
University, New Delhi, India in
2013. Now he is pursuing Ph.D.
in Computer Science from
School of Computer and Systems Sciences, Jawaharlal
Nehru University, New Delhi,
India. His research interest includes Wireless Sensor Networks,
Mobile Ad hoc Networks.
Dr. D. K. Lobiyal received his
Ph.D. and M. Tech. (Computer
Science) from School of Computer and Systems Sciences,
Jawaharlal Nehru University,
New Delhi, India in 1996 and
1991, respectively, and B. Tech.
(Computer Science and Engineering) from Lucknow
University, India in 1988. He is
currently working as Professor
at School of Computer and
Systems Sciences, Jawaharlal
Nehru University, New Delhi,
India. His areas of research
interest include Wireless Networks (Ad Hoc and Sensors), Natural
Language Processing, and Computational Neuroscience. He has
published more than 90 research articles in the international journals
of repute including IEEE, Elsevier, Wiley, and springer.
Dr. Shrawan Kumar received his
Ph.D. and M.Tech. degree in
Computer Science from School
of Computer and Systems Sciences, Jawaharlal Nehru
University, New Delhi, India in
2014, and 2009 respectively. He
also received his masters
(M.Sc.) in Mathematics from
Kanpur University, Kanpur,
Uttar Pradesh India in 2000. He
is currently working as Assistant Professor in department of
Computer Science, Indira
Gandhi National Tribal University, Amarkantak (M.P.), Regional Campus Manipur, India. His
research interest includes Wireless Sensor Networks, Mobile Ad hoc
Networks, Vehicular Ad hoc Network, IOT, IOBT, Big Data and
Cloud Computing, and AI.
